%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 625.000000 252.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.2 (Build 14C1514) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 625 252
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 625 252
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /R put
dup 34 /e put
dup 35 /l put
dup 36 /a put
dup 37 /t put
dup 38 /i put
dup 39 /o put
dup 40 /n put
dup 41 /s put
dup 42 /S put
dup 43 /r put
dup 44 /m put
dup 45 /hyphen put
dup 46 /parenleft put
dup 47 /two put
dup 48 /parenright put
dup 49 /D put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


000700025D411B0009000700190007002900070039000700490007005900070069000700790007008900070099000700A9000700B9000700C90007000D5D00BA0000001000032BB8000010BA000F000100032BB8000F103031371133321E0215140E0423031133323E0235342623ADA0425A39191B2A35363010FDF559825428B2A550022A25476540425D3E241305027AFD36325F8B5AACA80000000002004E0000029002CA0020002B009DB8002D2FBA0023000000032BB8002310B80002D0B8002D10B8001DDCBA001A0000001D111239B80027DC410500DA002700EA002700025D411B0009002700190027002900270039002700490027005900270069002700790027008900270099002700A9002700B9002700C90027000D5D00B800012FB8000E2FBA0000002300032BB8000010BA0022000300032BB8002210BA001A0003002211123930311311331133321E02171E0317332E03272E0327353E013534262303233533321615140E024E5FE8232A1A0C04050202070A6A0F0F080202030B17271F413B73662BC6EC433C1B2D3C02CAFD36013115232F1A1A362F260B122F34361A1A30271C06021262415764FEB7F9443627311D0A00000000010025FFF0026302DB0039008DBA001E001F00032BB8001E10BA0029001400032BB8002910B8001E10B8000BDC410500DA001400EA001400025D411B0009001400190014002900140039001400490014005900140069001400790014008900140099001400A9001400B9001400C90014000D5DB80032DCB8002910B8003BDC00BA0019002400032BB8001910BA0006003700032BB8000610303101332E0323220E0215141E0615140E0223222E023523141E0233323E0235342E0635343E0233321601EB5A0229475E37315D492C2741525552412720344120284C39235A2F516B3C31635033274152555241271B2D3A1E4A5F01F93B55381A19334F363141291913121D2E2527321D0C142A412D415F3D1E1733513935462E1B14111A2921232F1C0C4500000000020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D4105008500380095003800025DB8003810B900200003F4B9001F0003F4B8001710B900300003F4B8001710B80031D0B800312FB8002A10B80044DC00B800014558B800252F1BB9002500083E59B800014558B800022F1BB9000200043E59B800014558B800082F1BB9000800043E59BA000500020025111239B8002510B9001C0002F441050089001C0099001C00025D41110008001C0018001C0028001C0038001C0048001C0058001C0068001C0078001C00085DB8002510B8001FDCB8000210B900



00>] def
/CharStrings 19 dict dup begin
/.notdef 0 def
/parenleft 1 def
/parenright 2 def
/hyphen 3 def
/two 4 def
/D 5 def
/R 6 def
/S 7 def
/a 8 def
/e 9 def
/i 10 def
/l 11 def
/m 12 def
/n 13 def
/o 14 def
/r 15 def
/s 16 def
/t 17 def
/cyrbreve.compact 18 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4140288 def
currentdict currentfile eexec

9FE7905C9C7918C289FF82F1D6130EAD05259D6DAC546CA6213A0792743F6DB4245D21872C62FB18D65DC8D6E23008A46C43C0455DFC9DA14B7ED450B1FEBC70168D949CC641AA188CE80548D4A91702E92C3BA88CFCDB684EC1F5C8ECE082FE5A8DA0586E45A5BF75335F96B35D1770528058A2C088CBA494A412578C647875933D0A1346F89707DB9011D483F9E3D97B9AA4B41A5AB3B91189DFCC4D6BC3776FB89F60B88D71292B626E58472AE8D830116FD765087DC830301DCC0239BFF2A66D06F6D0B0BAC9C46A07E4E81EC155061CA7EB07EA9F9E0C994D812DDF2A34CA9C9366307E73C505CCBE34A1C73B77FC6BF1BEA4F67FDC45FA265CFA181BE74A9008A5DD7F36F61B03798BE2DF24E6144A2EC177169E29810D253A7FDED27DBD5E9A652D71134EA35CCCE7A01F9E0075430E0AC0EAE4313ABABDF2219B59FD0368799647D7E536B2652F5CB345DD8A156292200A578C04749E2912913DC9E517DD8FD8A48271148C80521682AB4F6378B8E041203CBCAD74E993FC0E7B49B930E5426C6C990D97FF4EB6FF1418B69AB7953CF08914D3EFF9592DE56638962B6A3A4B94A9961C36917E9E95F8375F54EDEA777E37858AFE704D580D521F1F62C52801B9D73CA50D62D6CB7B2B2B5CD6E004CA66BC0CA63BDE93E8D683C34A8AF368CAABDD427086401FE67339FAC928BFC07BAEA2F45BFB43CD252065085C136EDCF7C5581C83B9CA0DBE380CFA8FEDA41CB248A52FAACD0EE7D6E68894DE7BEA5C9F9179597784B6FC74019BC47BE2A806AC2078798A423E039A740857FEC7F3ED8B07A80F08877BC38AA4B7ACCCB38844E9F622E6B014B1F581DBB60109A583B48E31C6C17B7DAF711FE4CAE0C179D0B15AE6C7AF7F37B474F2E00E83AEF804BA3F1302993DFBB46B4DE61F1813061B0AB8722479FA0BD8C5131500D400F14D0B5111DB0B18DC20AEF30892A08E5EA72BBE69ECF8BD55D26456DBE1B8B5B3B74D46566DB808A894620FEDC56296276863E5FFE06E54FA61413786A4DC742D864A3117181EE348AA3F69C664FD48A43066879D19B1CB2A6F0A08BF1A3C59D7999282E0709803BAA3586E26F8AC5EC9D3933BEE27D3D9F30E3556B7E5107EA64D0ACC7E07F59D323EAEE33883F580F59E3A0E484D430A4503FA6A266C34104361B95386D3BDA4D254DE275609F462C36B7258350A7D87EAB242BA6AABD793EF15C9862118B00F1C2E66C77B2196021951A8C32132C8C84C75AAA240DBA1023F84FA4A9F724340A0BE90FE7B563D42C43B2CCD62DAB291D2E21283CB973FE68443308AC34E8D36E944615484D5051DAE75352D3C03F3A411B64A1AB6C3A54888E388850954C6B24EE4CABD96C649686C3902483442713E5C1E9560BA92E4CEE57CC87347E0B21106AFA4A2592C6124C44C1E368D975F9C65ACE00FC6D2963DC9
984A37033F4539F421E5DD9F92B1AB8BF34BA73BBBE895B758B097478DFC6AC501E15E30EDBD5F15F964BB2730FA348945B62316178D1A4EF57AE9B0CB30A0A4C449DCB420B481871F40FA47749888031248D6178061AD7BA3130B1173358746C5E0B0F62133BA985D54FFAC02138A8185B38F6F7EEF0AC0D23D1D28674E30E929E8B048D661CA5B3AE80444D5F5B85C4B1C974853256105F20C174C855F3F8CF95BBA15F64813941F50276D48635522C4A5989CE6C0F476ED40E863C6B7E8877C4093EBBF6B4B8795E0F3F91D6220535F419317E44CC0A7258CA2D4117CB227ABB49A79C196CA9DA8A96CC4D1EB9563E04E16B62EE2C681D1D40AF5CB7B3ECE6F1274B7EFE068CF4F04101F7766F5C8428659FA99CF16F856F251BC87307F82277FFE25F4D34C716C7C7B6DB1E5092DA445DA18488FCA7070C42CC6834B22257A87FA7C7532C744F423AFDC785151E6D890343877EAE45DA97AB2ABA5451993E3885EEAC7B517008EE1183E6051E94231E2785111A82CDDE639FFF020BE897E1D97B5586B292C7DA5ACC985FC6A0F757DAA954DF7AB944CDEDBE4EB955583C4D918F4BEED5F95A6B47E9697DFBC9322E6A5EA6FEE86D2F1FD4997C434C1DC515AAC65B7BDC99F28763222B1DC7107F098237B4C4C98D1E791D0E45E48881662A5117231E28F23E8B2EFB88AA7D17520B3ADD17D911B18D0EF68157CEF65B92C4DFD525F35E7646A89DDECE6F58B8C4162DE25831719CA9505993BA9CDFC96BBB5F36ED3DD87CF1DBF7ECBF0896FCACD9EDE23195A2A909825C79D4A38BFAE30B9D20FE49ECC4AFAEEBE810258562D160ABA77CA24E3C202414EED27EC4EACF57B1ABFC48726249E006ADDFF57FC50C49A6E76979888E063E15651CFE12388BD4C1074B8CFEAA2FC68EDAF139552670DF2D9EB9F5DFDB353D2B999B42B870491C722C9421C1A04EEC8B68600734C38A2E783E8C79848A92C362D3E8B6A5CC91D0EF8C65F219B8FD8754362DDDA69D0D9CB9A0CAE653DE87E534184EECE205D2616C0BB2F4C85CBA10E58BC86E56440516BC9032ECB398F1C68E96114E2117AAD2890F73923B9DAB8D0B03DB41F20FE810B5626DD6328A933DB8B9E2CA2C02E53F555D4D09E80AB028C43D21D72065D1A4151F67C5734DC3D8A7720E59F9A2FA872333FC88CF5FB5C5597EDF2334319B531D924C9AD2182456E01A1BB6CD767777F88A57B666FDCCE00466BC9CDA6199C57FAE54E878E2B8BE2D1658766A179EAFF898EA248D5C0EB72C8BA820F53B4673617EA661A16A2AEC366ADE6150C30BC62680C2A03536767C944D450B52D480EF1624ABDF699178913B56870AC265167427D01123E7FF46288DC9DFD3FC9D725C188A89BB7A0B50AEF6837C9C8BDDD45C13D2BE6EED2E3E1229E2773A3DAFCF9F410DDD39E6F0A10E0650C5C1115D0F5

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 625 252 rc
-1645 1134 m
1325 1134 l
1325 -63 l
-1645 -63 l
h
-1645 1134 m
f
434.30258 169.38043 m
461.1373 151.22107 461.1373 121.77894 434.30258 103.61957 c
407.46799 85.460114 363.96057 85.460114 337.12601 103.61957 c
310.29129 121.77894 310.29129 151.22107 337.12601 169.38043 c
363.96057 187.53989 407.46799 187.53989 434.30258 169.38043 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -1645 1134 cm
2079.3025 964.61957 m
2106.1372 982.77893 2106.1372 1012.2211 2079.3025 1030.3804 c
2052.468 1048.5399 2008.9606 1048.5399 1982.126 1030.3804 c
1955.2913 1012.2211 1955.2913 982.77893 1982.126 964.61957 c
2008.9606 946.46008 2052.468 946.46008 2079.3025 964.61957 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 385.71429 136.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-33.183998 6 m
(!"#$%&'\(\))[ 10.960000 8.592000 3.552000 8.592000 5.040000 3.552000 9.184000 8.896000 0.000000 ] xS
Q
/Cs2 SC
0 sc
q
155 243 m
308 243 l
308 189 l
155 189 l
h
155 243 m
W
0 0 625 252 rc
1 0 0 -1 231.5 216 cm
/F1.1[ 16 0 0 -16 0 0]sf
-68.160004 -10.5 m
(*%+"$,-%'-!"#$%&'\()[ 10.368000 5.040000 5.040000 8.592000 8.592000 13.648000 6.224000 5.040000 9.184000 6.224000 10.960000 8.592000 3.552000 8.592000 5.040000 3.552000 9.184000 0.000000 ] xS
-19.256001 7.5 m
(.*/!0)[ 4.144000 10.368000 8.896000 10.960000 0.000000 ] xS
Q
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 625 252 rc
1 0 0 -1 -1645 1134 cm
1784.5955 973.93616 m
1816.7271 961.29205 1849.8525 936.12677 1881 936 c
1909.0297 935.88593 1935.4727 956.04852 1962.4675 969.11591 c
S
0 i
CM
324.76599 161.60356 m
318.69913 167.61964 l
316.23929 162.14705 l
h
324.76599 161.60356 m
f
0 J
0 j
1 0 0 -1 -1645 1134 cm
1969.766 972.39642 m
1963.6991 966.38037 l
1961.2393 971.85297 l
h
1969.766 972.39642 m
S
1 J
1 j
0.60000002 i
1973.3578 1023.7908 m
1945.5746 1036.526 1921.4363 1062.479 1890 1062 c
1861.2714 1061.5623 1826.432 1039.0496 1793.8625 1024.7238 c
S
0 i
CM
141.47496 112.35292 m
147.70674 106.50785 l
150.01347 112.04671 l
h
141.47496 112.35292 m
f
0 J
0 j
1 0 0 -1 -1645 1134 cm
1786.475 1021.6471 m
1792.7068 1027.4922 l
1795.0134 1021.9533 l
h
1786.475 1021.6471 m
S
1 J
1 j
0.60000002 i
2098.8535 989.23718 m
2146.231 983.492 2217.3113 968.87317 2241 972 c
2264.6887 975.12683 2264.5405 1003.176 2241 1008 c
2219.0562 1012.4968 2156.1885 1004.5238 2109.6252 1001.5173 c
S
0 i
CM
456.63968 132.94374 m
464.45343 129.48756 l
464.79932 135.47758 l
h
456.63968 132.94374 m
f
0 J
0 j
1 0 0 -1 -1645 1134 cm
2101.6396 1001.0563 m
2109.4534 1004.5125 l
2109.7993 998.5224 l
h
2101.6396 1001.0563 m
S
Q
/Cs2 SC
0 sc
0 i
q
155 63 m
308 63 l
308 9 l
155 9 l
h
155 63 m
W
0 0 625 252 rc
1 0 0 -1 231.5 36 cm
/F1.1[ 16 0 0 -16 0 0]sf
-68.160004 -10.5 m
(!"#$%&'\(-%'-*%+"$,)[ 10.960000 8.592000 3.552000 8.592000 5.040000 3.552000 9.184000 8.896000 6.224000 5.040000 9.184000 6.224000 10.368000 5.040000 5.040000 8.592000 8.592000 0.000000 ] xS
-19.256001 7.5 m
(.!/*0)[ 4.144000 10.960000 8.896000 10.368000 0.000000 ] xS
Q
q
461 207 m
614 207 l
614 153 l
461 153 l
h
461 207 m
W
0 0 625 252 rc
1 0 0 -1 537.5 180 cm
/F1.1[ 16 0 0 -16 0 0]sf
-71.204002 -10.5 m
(!"#$%&'\(-%'-!"#$%&'\()[ 10.960000 8.592000 3.552000 8.592000 5.040000 3.552000 9.184000 8.896000 6.224000 5.040000 9.184000 6.224000 10.960000 8.592000 3.552000 8.592000 5.040000 3.552000 9.184000 0.000000 ] xS
-19.052 7.5 m
(.!/!0)[ 4.144000 10.960000 8.896000 10.960000 0.000000 ] xS
Q
/Cs1 SC
1 1 1 sc
q
0 0 625 252 rc
128.30257 169.38043 m
155.13728 151.22107 155.13728 121.77894 128.30257 103.61957 c
101.46799 85.460114 57.960579 85.460114 31.126001 103.61957 c
4.2912869 121.77894 4.2912869 151.22107 31.126001 169.38043 c
57.960579 187.53989 101.46799 187.53989 128.30257 169.38043 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1645 1134 cm
1773.3026 964.61957 m
1800.1373 982.77893 1800.1373 1012.2211 1773.3026 1030.3804 c
1746.468 1048.5399 1702.9606 1048.5399 1676.126 1030.3804 c
1649.2913 1012.2211 1649.2913 982.77893 1676.126 964.61957 c
1702.9606 946.46008 1746.468 946.46008 1773.3026 964.61957 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 79.714287 136.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-35.256001 -12 m
(!"#$%&'\($#)[ 10.960000 8.592000 3.552000 8.592000 5.040000 3.552000 9.184000 8.896000 8.592000 0.000000 ] xS
-16.743999 6 m
(1$%$)[ 11.264000 8.592000 5.040000 0.000000 ] xS
-25.639999 24 m
(*%+"$,)[ 10.368000 5.040000 5.040000 8.592000 8.592000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
